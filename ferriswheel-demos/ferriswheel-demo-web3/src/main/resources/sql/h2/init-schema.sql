DROP TABLE IF EXISTS T_SYS_USER;
DROP TABLE IF EXISTS T_SYS_ROLE;
DROP TABLE IF EXISTS T_SYS_U2R;
DROP TABLE IF EXISTS T_SYS_PERMISSION;
DROP TABLE IF EXISTS T_SYS_MENU;
DROP TABLE IF EXISTS T_SYS_R2P;
DROP TABLE IF EXISTS T_BLOG;

CREATE TABLE T_SYS_USER (
  ID         BIGINT IDENTITY,
  EMAIL      VARCHAR(255),
  LOGIN_NAME VARCHAR(255) NOT NULL UNIQUE,
  NAME       VARCHAR(255),
  PASSWORD   VARCHAR(255),
  OTHER      VARCHAR(512),
  PRIMARY KEY (ID)
);
CREATE TABLE T_SYS_ROLE (
  ID        BIGINT IDENTITY,
  ROLE_NAME VARCHAR(255) NOT NULL UNIQUE,
  PRIMARY KEY (ID)
);
CREATE TABLE T_SYS_U2R (
  USER_ID BIGINT NOT NULL,
  ROLE_ID BIGINT NOT NULL,
  PRIMARY KEY (USER_ID, ROLE_ID),
  FOREIGN KEY (USER_ID) REFERENCES T_SYS_USER (ID),
  FOREIGN KEY (ROLE_ID) REFERENCES T_SYS_ROLE (ID)
);

CREATE TABLE T_SYS_MENU (
  ID         BIGINT IDENTITY,
  PARENT_ID  BIGINT,
  MENU_NAME  VARCHAR(50),
  ALIAS_NAME VARCHAR(50),
  MENU_URL   VARCHAR(512),
  MENU_TYPE  VARCHAR(50),
  ORDER_NUM  INT,
  PRIMARY KEY (id)
);

CREATE TABLE T_SYS_PERMISSION (
  ID          BIGINT IDENTITY,
  ROLE_ID     BIGINT,
  MENU_ID     BIGINT,
  RES_NAME    VARCHAR(50),
  RES_CN_NAME VARCHAR(50),
  OPERATION   VARCHAR(50),
  PRIMARY KEY (id)
);
CREATE TABLE T_SYS_R2P (
  role_id BIGINT NOT NULL,
  perm_id BIGINT NOT NULL,
  FOREIGN KEY (role_id) REFERENCES T_SYS_ROLE (ID),
  FOREIGN KEY (perm_id) REFERENCES T_SYS_PERMSSION (ID)
);

CREATE TABLE T_BLOG (
  ID           BIGINT IDENTITY,
  TITLE        VARCHAR(255) NOT NULL,
  AUTHOR       VARCHAR(20),
  CATEGORY     VARCHAR(50),
  URL          VARCHAR(512),
  OTHER        VARCHAR(1024),
  CREATER      VARCHAR(20),
  PUBLISH_DATE DATE,
  PRIMARY KEY (id)
);
